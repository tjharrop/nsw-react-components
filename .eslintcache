[{"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/index.js":"1","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/reportWebVitals.js":"2","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/App.js":"3","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/accordion/index.js":"4","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/button/index.js":"5","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/notification/index.js":"6","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/tags/index.js":"7","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/callout/index.js":"8","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/card/index.js":"9","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/in-page-navigation/index.js":"10","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/breadcrumbs/index.js":"11","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/link-list/index.js":"12"},{"size":555,"mtime":1615951381217,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1615942690688,"results":"15","hashOfConfig":"14"},{"size":4236,"mtime":1615975020524,"results":"16","hashOfConfig":"14"},{"size":10758,"mtime":1615945991480,"results":"17","hashOfConfig":"14"},{"size":3046,"mtime":1615948265187,"results":"18","hashOfConfig":"14"},{"size":2484,"mtime":1615959607223,"results":"19","hashOfConfig":"14"},{"size":2831,"mtime":1615958929560,"results":"20","hashOfConfig":"14"},{"size":2224,"mtime":1615963609517,"results":"21","hashOfConfig":"14"},{"size":8115,"mtime":1615971881415,"results":"22","hashOfConfig":"14"},{"size":2894,"mtime":1615973290055,"results":"23","hashOfConfig":"14"},{"size":4857,"mtime":1615974254990,"results":"24","hashOfConfig":"14"},{"size":4166,"mtime":1615975089251,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h6f65m",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/reportWebVitals.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/App.js",["53","54","55","56","57","58"],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/accordion/index.js",["59","60","61","62"],"/*! [replace-name] v[replace-version] */\n/***************************************************************************************************************************************************************\n *\n * Accordion function\n *\n * A component to allow users to show or hide page elements.\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AU from '@gov.au/animate'; // interdependency with our animate lib\n\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\n// [replace-imports]\n\n\nlet IDstart = 0;\n\nclass NSWaccordion extends React.PureComponent {\n\t/**\n\t * Constructor\n\t * Create state and iterate over a unique ID\n\t *\n\t * @param  {object}  props - The props object\n\t */\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst { header, closed, speed, onOpen, afterOpen, onClose, afterClose, dark, className = '', children, ...attributeOptions } = props;\n\n\t\tthis.setAriaRoles     = this.setAriaRoles.bind( this );\n\t\tthis.toggleClasses    = this.toggleClasses.bind( this );\n\t\tthis.removeClass      = this.removeClass.bind( this );\n\t\tthis.addClass         = this.addClass.bind( this );\n\t\tthis.accordionToggle  = this.accordionToggle.bind( this );\n\t\tthis.accordionOpen    = this.accordionOpen.bind( this );\n\t\tthis.accordionClose   = this.accordionClose.bind( this );\n\t\tthis.toggle           = this.toggle.bind( this );\n\t\tthis.className        = className;\n\t\tthis.attributeOptions = attributeOptions;\n\n\t\t// Generate a unique ID and our css class\n\t\tIDstart ++;\n\n\t\tthis.ID = `accordion${ IDstart }`;\n\t\tthis.closeClass = this.props.closed ? 'nsw-accordion--closed' : '';\n\t}\n\n\n\t/**\n\t * Handle state if supplied\n\t */\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.closed !== prevProps.closed ) {\n\t\t\tif ( this.props.closed ) {\n\t\t\t\tthis.accordionClose( this.accordionHeader );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.accordionOpen( this.accordionHeader );\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Set the correct Aria roles for given element on the accordion title and body\n\t *\n\t * @param  {object} element  - The DOM element we want to set attributes for\n\t * @param  {object} target   - The DOM element we want to set attributes for\n\t * @param  {string} state    - The DOM element we want to set attributes for\n\t */\n\tsetAriaRoles( element, target, state ) {\n\n\t\tif( state === 'closing' ) {\n\t\t\telement.setAttribute( 'aria-expanded', false );\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute( 'aria-expanded', true );\n\t\t}\n\t}\n\n\n\t/**\n\t * IE8 compatible function for replacing classes on a DOM node\n\t *\n\t * @param  {object} element       - The DOM element we want to toggle classes on\n\t * @param  {object} target        - The DOM element we want to toggle classes on\n\t * @param  {object} state         - The current state of the animation on the element\n\t * @param  {string} openingClass  - The firstClass you want to toggle on the DOM node\n\t * @param  {string} closingClass  - The secondClass you want to toggle on the DOM node\n\t */\n\ttoggleClasses( element, state, openingClass, closingClass ) {\n\t\tif( state === 'opening' || state === 'open' ) {\n\t\t\tvar oldClass = openingClass || 'nsw-accordion--closed';\n\t\t\tvar newClass = closingClass || 'nsw-accordion--open';\n\t\t}\n\t\telse {\n\t\t\tvar oldClass = closingClass || 'nsw-accordion--open';\n\t\t\tvar newClass = openingClass || 'nsw-accordion--closed';\n\t\t}\n\n\t\tthis.removeClass( element, oldClass );\n\t\tthis.addClass( element, newClass );\n\t}\n\n\n\t/**\n\t * IE8 compatible function for removing a class\n\t *\n\t * @param  {object} element   - The DOM element we want to manipulate\n\t * @param  {object} className - The name of the class to be removed\n\t */\n\tremoveClass( element, className ) {\n\t\tif( element.classList ) {\n\t\t\telement.classList.remove( className );\n\t\t}\n\t\telse {\n\t\t\telement.className = element.className.replace( new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"), \" \" );\n\t\t}\n\t}\n\n\n\t/**\n\t * IE8 compatible function for adding a class\n\t *\n\t * @param  {object} element   - The DOM element we want to manipulate\n\t * @param  {object} className - The name of the class to be added\n\t */\n\taddClass( element, className ) {\n\t\tif( element.classList ) {\n\t\t\telement.classList.add( className );\n\t\t}\n\t\telse {\n\t\t\telement.className = element.className + \" \" + className;\n\t\t}\n\t}\n\n\n\t/**\n\t * Toggle an accordion element\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t * @param  {object}  callbacks - An object of four optional callbacks: { onOpen, afterOpen, onClose, afterClose }\n\t *\n\t */\n\taccordionToggle( elements, speed, callbacks ) {\n\t\tconst SetAriaRoles = this.setAriaRoles;\n\t\tconst ToggleClasses = this.toggleClasses;\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\twindow.event.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\t// making sure we can iterate over just one DOM element\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\t// check this once\n\t\tif( typeof callbacks != 'object' ) {\n\t\t\tcallbacks = {};\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\tif( target == null ) {\n\t\t\t\tthrow new Error('AU.animate.Toggle cannot find the target to be toggled from inside aria-controls');\n\t\t\t}\n\n\t\t\ttarget.style.display = 'block';\n\n\n\t\t\t(function( element ) {\n\t\t\t\tAU.animate.Toggle({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tprefunction: function( target, state ) {\n\t\t\t\t\t\tif( state === 'opening' ) {\n\t\t\t\t\t\t\ttarget.style.display = 'block';\n\n\t\t\t\t\t\t\t// run when opening\n\t\t\t\t\t\t\tif( typeof callbacks.onOpen === 'function' ) {\n\t\t\t\t\t\t\t\tcallbacks.onOpen();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// run when closing\n\t\t\t\t\t\t\tif( typeof callbacks.onClose === 'function' ) {\n\t\t\t\t\t\t\t\tcallbacks.onClose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tSetAriaRoles( element, target, state );\n\t\t\t\t\t\tToggleClasses( element, state );\n\t\t\t\t\t},\n\t\t\t\t\tpostfunction: function( target, state ) {\n\t\t\t\t\t\tif( state === 'closed' ) {\n\t\t\t\t\t\t\ttarget.style.display = '';\n\t\t\t\t\t\t\ttarget.style.height = '';\n\n\t\t\t\t\t\t\t// run after opening\n\t\t\t\t\t\t\tif( typeof callbacks.afterOpen === 'function' ) {\n\t\t\t\t\t\t\t\tcallbacks.afterClose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t// run after closing\n\t\t\t\t\t\t\tif( typeof callbacks.afterClose === 'function' ) {\n\t\t\t\t\t\t\t\tcallbacks.afterOpen();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tToggleClasses( target, state );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( element );\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\t/**\n\t * Open a group of accordion elements\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t *\n\t */\n\taccordionOpen( elements, speed ) {\n\t\tconst ToggleClasses = this.toggleClasses;\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\twindow.event.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\t// let’s find out if this accordion is still closed\n\t\t\tvar height = 0;\n\t\t\tif( typeof getComputedStyle !== 'undefined' ) {\n\t\t\t\theight = window.getComputedStyle( target ).height;\n\t\t\t}\n\t\t\telse {\n\t\t\t\theight = target.currentStyle.height;\n\t\t\t}\n\n\t\t\tif( parseInt( height ) === 0 ) {\n\t\t\t\ttarget.style.height = '0px';\n\t\t\t}\n\n\t\t\ttarget.style.display = '';\n\t\t\tthis.toggleClasses( target, 'opening' );\n\t\t\tthis.toggleClasses( element, 'opening' );\n\t\t\tthis.setAriaRoles( element, target, 'opening' );\n\n\t\t\t(function( target, speed, element ) {\n\t\t\t\tAU.animate.Run({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tendSize: 'auto',\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tToggleClasses( element, 'opening' );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( target, speed, element );\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Close a group of accordion elements\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t *\n\t */\n\taccordionClose( elements, speed ) {\n\n\t\tconst ToggleClasses = this.toggleClasses;\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\twindow.event.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\tthis.toggleClasses( element, 'closing' );\n\t\t\tthis.setAriaRoles( element, target, 'closing' );\n\n\t\t\t(function( target, speed ) {\n\t\t\t\tAU.animate.Run({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tendSize: 0,\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\ttarget.style.display = '';\n\t\t\t\t\t\ttarget.style.height = '';\n\t\t\t\t\t\tToggleClasses( target, 'close' );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( target, speed );\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Toggle an accordion on click\n\t *\n\t * @param  {event object} event - The event object of the click\n\t */\n\ttoggle( event ) {\n\t\tevent.preventDefault();\n\n\t\tthis.accordionToggle( this.accordionHeader, this.props.speed, {\n\t\t\tonOpen: this.props.onOpen,\n\t\t\tafterOpen: this.props.afterOpen,\n\t\t\tonClose: this.props.onClose,\n\t\t\tafterClose: this.props.afterClose,\n\t\t});\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<section className={ `nsw-accordion ${ this.className }${ this.props.dark ? ' nsw-accordion--dark' : '' }` } { ...this.attributeOptions }>\n\t\t\t\t<h2\n\t\t\t\t\tclassName={`nsw-accordion__title js-nsw-accordion ${ this.closeClass }`}\n\t\t\t\t\taria-controls={ this.ID }\n\t\t\t\t\taria-expanded={ !this.props.closed }\n\t\t\t\t\tref={ accordionHeader => { this.accordionHeader = accordionHeader } }\n\t\t\t\t\tonClick={ ( event ) => this.toggle( event ) }>\n\t\t\t\t\t\t{ this.props.header }\n\t\t\t\t</h2>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={`nsw-accordion__body ${ this.closeClass }`}\n\t\t\t\t\tid={ this.ID }>\n\t\t\t\t\t<div className=\"nsw-accordion__body-wrapper\">\n\n\t\t\t\t\t\t{ this.props.children }\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n};\n\nNSWaccordion.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\theader: PropTypes.string.isRequired,\n\tclosed: PropTypes.bool,\n\tspeed: PropTypes.number,\n\tdark: PropTypes.bool,\n\tonOpen: PropTypes.func,\n\tafterOpen: PropTypes.func,\n\tonClose: PropTypes.func,\n\tafterClose: PropTypes.func,\n\tclassName: PropTypes.string,\n};\n\nNSWaccordion.defaultProps = {\n\tclosed: false,\n};\n\nexport default NSWaccordion;\n",["63","64"],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/button/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/notification/index.js",["65"],"/*! [replace-name] v[replace-version] */\n/***************************************************************************************************************************************************************\n *\n * Page alert function\n *\n * Use page alert to notify and alert users of important application events.\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\n// [replace-imports]\n\n/**\n * All different kind of alerts\n *\n * @type {Object}\n */\n const options = {\n \tinfo: 'nsw-notification--info',\n \twarning: 'nsw-notification--warning',\n \terror: 'nsw-notification--error',\n \tsuccess: 'nsw-notification--success',\n };\n\n const icons = {\n \tinfo: 'info',\n \twarning: 'cancel',\n \terror: 'error',\n \tsuccess: 'check_circle',\n };\n\n\n/**\n * DEFAULT\n * Page alert\n *\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} alt              - Add the alt variation class, optional\n * @param  {string}  as               - What kind of alert this is, takes: 'info', 'warning', 'error', 'success'\n * @param  {node}    children         - Anything inside the component\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nconst NSWnotification = ({ title = '', as, alt, dark, children, className = '', ...attributeOptions }) => (\n\t<div\n\t\tclassName={`nsw-notification ${ className } ${\n\t\t\tdark\n\t\t\t\t? ' nsw-notification--dark au-body--dark'\n\t\t\t\t: ''\n\t\t\t}${\n\t\t\talt\n\t\t\t\t? ' nsw-notification--alt au-body--alt'\n\t\t\t\t: ''\n\t\t\t} ${ options[ as ] }`} { ...attributeOptions }\n\t>\n\n    <i focusable=\"false\" className=\"material-icons nsw-material-icons nsw-notification__icon\">{ icons[ as ] }</i>\n    <div class=\"nsw-notification__content\">\n      <h4 class=\"nsw-notification__title\">{ title }</h4>\n      { children }\n    </div>\n\t</div>\n);\n\nNSWnotification.propTypes = {\n\tas: PropTypes.oneOf([ 'info', 'warning', 'error', 'success' ]).isRequired,\n\talt: PropTypes.bool,\n\tdark: PropTypes.bool,\n\tchildren: PropTypes.node.isRequired,\n\tclassName: PropTypes.string,\n};\n\nexport default NSWnotification;\n","/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/tags/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/callout/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/card/index.js",["66","67"],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/in-page-navigation/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/breadcrumbs/index.js",[],"/Users/tjharrop/Documents/GitHub/nsw-react-components/src/components/link-list/index.js",[],{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":6,"column":18,"nodeType":"70","messageId":"71","endLine":6,"endColumn":21},{"ruleId":"68","severity":1,"message":"73","line":11,"column":16,"nodeType":"70","messageId":"71","endLine":11,"endColumn":27},{"ruleId":"68","severity":1,"message":"74","line":11,"column":29,"nodeType":"70","messageId":"71","endLine":11,"endColumn":39},{"ruleId":"68","severity":1,"message":"75","line":11,"column":51,"nodeType":"70","messageId":"71","endLine":11,"endColumn":58},{"ruleId":"68","severity":1,"message":"76","line":11,"column":60,"nodeType":"70","messageId":"71","endLine":11,"endColumn":68},{"ruleId":"77","severity":1,"message":"78","line":103,"column":8,"nodeType":"70","messageId":"79","endLine":103,"endColumn":16},{"ruleId":"77","severity":1,"message":"80","line":104,"column":8,"nodeType":"70","messageId":"79","endLine":104,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":186,"column":5,"nodeType":"83","messageId":"84","endLine":231,"endColumn":5},{"ruleId":"85","severity":1,"message":"86","line":370,"column":5,"nodeType":"87","endLine":375,"endColumn":52},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"68","severity":1,"message":"92","line":12,"column":8,"nodeType":"70","messageId":"71","endLine":12,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":96,"column":15,"nodeType":"95","messageId":"96","endLine":96,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":98,"column":53,"nodeType":"87","endLine":98,"endColumn":91},"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Tag' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'CardTag' is defined but never used.","'CardDate' is defined but never used.","no-redeclare","'oldClass' is already defined.","redeclared","'newClass' is already defined.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'target'.","FunctionExpression","unsafeRefs","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role heading. This role is implicit on the element h2.","JSXOpeningElement","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'Icon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]